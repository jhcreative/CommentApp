{"version":3,"sources":["app/scripts/home/home.controller.js","app/scripts/home/home.service.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"public/js/home.js","sourcesContent":["// comment_app home controller 'appHome'\n\nangular.module('appHome', [{\n  files: [\n    // '/css/home.css',\n\n  ]\n}])\n  .controller('HomeController',\n    ['appComments', 'store', function(appComments, store) {\n\n      // controller as\n      var home = this;\n      // init model\n      appComments.getItems().then(function(data){\n        // what we'll work with\n        home.comments = data;\n        // for cross-module potential\n        store.home = home.comments;\n      });\n\n}]);\n","// comment_app home service\n\nangular.module('appHome')\n  .factory('appComments', [ '$http', '$q', function ($http, $q){\n    return {\n      getItems: function(){\n\n        var deferred = $q.defer();\n        $http.get('/api/thread.json')\n          .success(function(data){\n            var theseResults = data;\n            console.log('RAW: ', theseResults);\n\n            // virtual sort\n            var raw = theseResults.topics,\n                numTopics = raw.length;\n            theseResults.model = {};\n\n            // loop through topics\n            for (tI = 0; tI < numTopics; tI++ ) {\n\n              var thisTopic = raw[tI],\n                  thisKey = 'topic_' + tI;\n\n              // make new object\n              theseResults.model[thisKey] = {};\n\n              var thisObject = theseResults.model[thisKey],\n                  numResponses = thisTopic.responses.length;\n\n              // set title & initial content\n              thisObject.id = thisTopic.responses[0].id;\n              thisObject.displaytitle = thisTopic.topictitle;\n              thisObject.displaycontent = thisTopic.responses[0].posttext;\n              thisObject.byparent = {};\n\n              // loop through/group responses\n              for (rI = 0; rI < numResponses; rI++ ) {\n\n                var thisResponse = thisTopic.responses[rI],\n                    thisParentKey = thisResponse.parentid;\n\n                if (thisParentKey !== 0){\n                  if(thisObject.byparent[thisParentKey]){\n                    // push to existing array\n                    thisObject.byparent[thisParentKey].push(thisResponse);\n                  } else {\n                    // make new array\n                    thisObject.byparent[thisParentKey] = [];\n                    // add first element\n                    thisObject.byparent[thisParentKey].push(thisResponse);\n                  }\n                }\n\n              }\n\n              theseResults.model[thisKey] = thisObject;\n            }\n\n            console.log('PROCESSED: ', theseResults);\n            deferred.resolve(theseResults);\n          });\n\n        return deferred.promise;\n\n      }\n    }\n  }]);\n"]}